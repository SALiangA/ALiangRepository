<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">
   <!-- 配置组件 自动扫描 service-->
   <context:component-scan base-package="com.gec.service"/>
    <!-- 配置属性器(mysql.properties) -->   
	<context:property-placeholder
		location="classpath:mysql.properties"/>
	<!-- 配置基础数据源 -->
	<bean
		id="dataSource" 
		class="org.apache.commons.dbcp.BasicDataSource"
		p:driverClassName="${jdbc.driver}"
		p:url="${jdbc.url}"
		p:username="${jdbc.username}"
		p:password="${jdbc.password}"
	/>
	<!-- 配置会话工厂 -->
	<bean  id="sqlSessionFactory" 
		   class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>	
		<property name="mapperLocations" value="classpath:com/gec/mappers/*.xml"/>
	</bean>
	<!-- 配置：映射扫描配置器（Mybatis） -->
	<bean  id="configurer"
		   class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		   <!-- 这里的基本包路径，是你CourceMapper.java所在的路径 -->
		  <property name="basePackage" value="com.gec.dao"/> 
		  <property name="SqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>
	<!-- 配置事务管理器 -->
	<bean id="txManager"
	      class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<!-- 配置声明式事务 -->
	<!-- 配置事务增强对象 
		需要引入tx工作空间-->
	<tx:advice	id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<!--传播行为：
					SUPPORTS ：如果存在事务就在当前事务中运行，不存在就算了  
					REQUIRED:如果存在事务就在当前事务中运行，不存在就新建一个事务，在新建事务中运行
			-->
			<tx:method name="get*" propagation="SUPPORTS"/>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="del" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
	<!-- 配置AOP切面编程的相关设置
		备注：配置AOP切面编程，需要导入AOP工作空间标签
		切面=通知+切入点
	 -->
	<aop:config>
		<!-- 配置切入点 -->
		<aop:pointcut 
		expression="execution(* com.gec.service.*.*(..))" 
		id="txPointcut"/>
		<!-- 引入增强 -->
		<aop:advisor advice-ref="txAdvice"
		pointcut-ref="txPointcut"
		/>
	</aop:config>
	<!-- 文件上传配置器 -->
	<bean id="multipartResolver" 
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	<property name="defaultEncoding" value="UTF-8"/>
	<property name="maxUploadSize" value="6896769"/><!-- 指定文件上传大小 -->
	<property name="uploadTempDir" value="/temp"/>
	</bean>
</beans>